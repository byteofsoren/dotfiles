#
# ~/.bashrc
#
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

#Alias
alias ls='ls --color=auto'
alias la='ls -lhtr'
#alias lat='ls -lhatr'
alias ll='ls -lh'
alias ccat='pygmentize -g -O style=colorful,linenos=1'
alias open=’xdg-open’
alias catkin_make='catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python3'
export PATH=${PATH}:${HOME}/scripts/
# export PATH=${PATH}:/opt/ros/melodic/share/std_msgs/
export PATH=${PATH}:/home/r00tr4t/bin/intelFPGA_lite/18.1/quartus/bin
export OPENSCADPATH=${HOME}/.local/share/OpenSCAD/libraries/
export QT_QPA_PLATFORMTHEME=qt5ct
export XDG_CONFIG_HOME=${HOME}/.config
#alias cdA='cd ~/.config/awesome'
#export wine32=”WINEPREFIX=' /home/$username/.wine32'”
#export XDG_RUNTIME_DIR=/run/user/`id -u`
#export LD_LIBRARY_PATH='/usr/lib/python3.6/site-packages/vtK':$LD_LIBRARY_PATH

# PBCopy and PBPaste alias
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'


# Vim keybinding in bash
set -o vi




#exec fish
# get current branch in git repo
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        STAT=`parse_git_dirty`
        echo "[${BRANCH}${STAT}]"
    else
        echo ""
    fi
}

# get current status of git repo
function parse_git_dirty {
    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

# add this to ps1 export PS1="\`parse_git_branch\` "

# Collor Sheemes.
BOLD="\[$(tput bold)\]"
NORM=$(tput sgr0)
RESTORE='\033[37m'

RED='\033[00;31m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'
BLUE='\033[00;34m'
PURPLE='\033[00;35m'
CYAN='\033[00;36m'
LIGHTGRAY='\033[00;37m'

LRED='\033[01;31m'
LGREEN='\033[01;32m'
LYELLOW='\033[01;33m'
LBLUE='\033[01;34m'
LPURPLE='\033[01;35m'
LCYAN='\033[01;36m'
WHITE='\033[01;37m'
HISTCOLLOR='\033[38;5;214m'

function fansy_ps1_no3
{
   export PS1="\[${LGREEN}\]┌─[\[${HISTCOLLOR}\]\!\[${LGREEN}\]][\u@\h]\[${LBLUE}\] \w \[${HISTCOLLOR}\]\[\`parse_git_branch\`\]\[${LGREEN}\]\n└──> \[${RESTORE}\]"
}

fansy_ps1_no3


# The ps2 prompt if ever neded
export PS2="\n\e[38;5;214m>\e[1;037m"
# Edditor
export EDITOR="vim"
#export PYTHONPATH='/usr/local/lib/python2.7/site-packages/:/usr/lib/python3.4/site-packages/'

#256 bit color suport..
export TERM=xterm-256color

#Stop ctl - s in gnome terminal
stty stop undef


export QSYS_ROOTDIR="/home/r00tr4t/bin/intelFPGA_lite/18.1/quartus/sopc_builder/bin"
